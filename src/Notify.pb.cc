// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Notify.proto

#include "Notify.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Notify {
class GtwEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GtwEvent>
      _instance;
} _GtwEvent_default_instance_;
class ProgramStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProgramStatus>
      _instance;
} _ProgramStatus_default_instance_;
class ConnectStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectStatus>
      _instance;
} _ConnectStatus_default_instance_;
class QotRightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QotRight>
      _instance;
} _QotRight_default_instance_;
class APILevelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APILevel>
      _instance;
} _APILevel_default_instance_;
class APIQuotaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APIQuota>
      _instance;
} _APIQuota_default_instance_;
class UsedQuotaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsedQuota>
      _instance;
} _UsedQuota_default_instance_;
class S2CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2C>
      _instance;
} _S2C_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace Notify
namespace protobuf_Notify_2eproto {
void InitDefaultsGtwEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Notify::_GtwEvent_default_instance_;
    new (ptr) ::Notify::GtwEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::GtwEvent::InitAsDefaultInstance();
}

void InitDefaultsGtwEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGtwEventImpl);
}

void InitDefaultsProgramStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2eproto::InitDefaultsProgramStatus();
  {
    void* ptr = &::Notify::_ProgramStatus_default_instance_;
    new (ptr) ::Notify::ProgramStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::ProgramStatus::InitAsDefaultInstance();
}

void InitDefaultsProgramStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProgramStatusImpl);
}

void InitDefaultsConnectStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Notify::_ConnectStatus_default_instance_;
    new (ptr) ::Notify::ConnectStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::ConnectStatus::InitAsDefaultInstance();
}

void InitDefaultsConnectStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConnectStatusImpl);
}

void InitDefaultsQotRightImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Notify::_QotRight_default_instance_;
    new (ptr) ::Notify::QotRight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::QotRight::InitAsDefaultInstance();
}

void InitDefaultsQotRight() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQotRightImpl);
}

void InitDefaultsAPILevelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Notify::_APILevel_default_instance_;
    new (ptr) ::Notify::APILevel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::APILevel::InitAsDefaultInstance();
}

void InitDefaultsAPILevel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAPILevelImpl);
}

void InitDefaultsAPIQuotaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Notify::_APIQuota_default_instance_;
    new (ptr) ::Notify::APIQuota();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::APIQuota::InitAsDefaultInstance();
}

void InitDefaultsAPIQuota() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAPIQuotaImpl);
}

void InitDefaultsUsedQuotaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Notify::_UsedQuota_default_instance_;
    new (ptr) ::Notify::UsedQuota();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::UsedQuota::InitAsDefaultInstance();
}

void InitDefaultsUsedQuota() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUsedQuotaImpl);
}

void InitDefaultsS2CImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Notify_2eproto::InitDefaultsGtwEvent();
  protobuf_Notify_2eproto::InitDefaultsProgramStatus();
  protobuf_Notify_2eproto::InitDefaultsConnectStatus();
  protobuf_Notify_2eproto::InitDefaultsQotRight();
  protobuf_Notify_2eproto::InitDefaultsAPILevel();
  protobuf_Notify_2eproto::InitDefaultsAPIQuota();
  protobuf_Notify_2eproto::InitDefaultsUsedQuota();
  {
    void* ptr = &::Notify::_S2C_default_instance_;
    new (ptr) ::Notify::S2C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::S2C::InitAsDefaultInstance();
}

void InitDefaultsS2C() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsS2CImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Notify_2eproto::InitDefaultsS2C();
  {
    void* ptr = &::Notify::_Response_default_instance_;
    new (ptr) ::Notify::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Notify::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::GtwEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::GtwEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::GtwEvent, eventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::GtwEvent, desc_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ProgramStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ProgramStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ProgramStatus, programstatus_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ConnectStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ConnectStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ConnectStatus, qotlogined_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::ConnectStatus, trdlogined_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, hkqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, usqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, cnqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, hkoptionqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, hasusoptionqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, hkfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, usfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, usoptionqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, usindexqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, usotcqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, sgfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, jpfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, uscmefutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, uscbotfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, usnymexfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, uscomexfutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, uscboefutureqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, shqotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::QotRight, szqotright_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  17,
  18,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APILevel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APILevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APILevel, apilevel_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APIQuota, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APIQuota, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APIQuota, subquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::APIQuota, historyklquota_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::UsedQuota, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::UsedQuota, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::UsedQuota, usedsubquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::UsedQuota, usedklinequota_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, programstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, connectstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, qotright_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, apilevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, apiquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::S2C, usedquota_),
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::Response, rettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::Response, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::Response, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Notify::Response, s2c_),
  3,
  0,
  2,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::Notify::GtwEvent)},
  { 9, 15, sizeof(::Notify::ProgramStatus)},
  { 16, 23, sizeof(::Notify::ConnectStatus)},
  { 25, 49, sizeof(::Notify::QotRight)},
  { 68, 74, sizeof(::Notify::APILevel)},
  { 75, 82, sizeof(::Notify::APIQuota)},
  { 84, 91, sizeof(::Notify::UsedQuota)},
  { 93, 106, sizeof(::Notify::S2C)},
  { 114, 123, sizeof(::Notify::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_GtwEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_ProgramStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_ConnectStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_QotRight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_APILevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_APIQuota_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_UsedQuota_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_S2C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Notify::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Notify.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Notify.proto\022\006Notify\032\014Common.proto\"+\n\010"
      "GtwEvent\022\021\n\teventType\030\001 \002(\005\022\014\n\004desc\030\002 \002("
      "\t\"=\n\rProgramStatus\022,\n\rprogramStatus\030\001 \002("
      "\0132\025.Common.ProgramStatus\"7\n\rConnectStatu"
      "s\022\022\n\nqotLogined\030\001 \002(\010\022\022\n\ntrdLogined\030\002 \002("
      "\010\"\356\003\n\010QotRight\022\022\n\nhkQotRight\030\004 \002(\005\022\022\n\nus"
      "QotRight\030\005 \002(\005\022\022\n\ncnQotRight\030\006 \002(\005\022\030\n\020hk"
      "OptionQotRight\030\007 \001(\005\022\033\n\023hasUSOptionQotRi"
      "ght\030\010 \001(\010\022\030\n\020hkFutureQotRight\030\t \001(\005\022\030\n\020u"
      "sFutureQotRight\030\n \001(\005\022\030\n\020usOptionQotRigh"
      "t\030\013 \001(\005\022\027\n\017usIndexQotRight\030\014 \001(\005\022\025\n\rusOt"
      "cQotRight\030\r \001(\005\022\030\n\020sgFutureQotRight\030\016 \001("
      "\005\022\030\n\020jpFutureQotRight\030\017 \001(\005\022\033\n\023usCMEFutu"
      "reQotRight\030\020 \001(\005\022\034\n\024usCBOTFutureQotRight"
      "\030\021 \001(\005\022\035\n\025usNYMEXFutureQotRight\030\022 \001(\005\022\035\n"
      "\025usCOMEXFutureQotRight\030\023 \001(\005\022\034\n\024usCBOEFu"
      "tureQotRight\030\024 \001(\005\022\022\n\nshQotRight\030\025 \001(\005\022\022"
      "\n\nszQotRight\030\026 \001(\005\"\034\n\010APILevel\022\020\n\010apiLev"
      "el\030\003 \002(\t\"4\n\010APIQuota\022\020\n\010subQuota\030\001 \002(\005\022\026"
      "\n\016historyKLQuota\030\002 \002(\005\"9\n\tUsedQuota\022\024\n\014u"
      "sedSubQuota\030\001 \001(\005\022\026\n\016usedKLineQuota\030\002 \001("
      "\005\"\242\002\n\003S2C\022\014\n\004type\030\001 \002(\005\022\037\n\005event\030\002 \001(\0132\020"
      ".Notify.GtwEvent\022,\n\rprogramStatus\030\003 \001(\0132"
      "\025.Notify.ProgramStatus\022,\n\rconnectStatus\030"
      "\004 \001(\0132\025.Notify.ConnectStatus\022\"\n\010qotRight"
      "\030\005 \001(\0132\020.Notify.QotRight\022\"\n\010apiLevel\030\006 \001"
      "(\0132\020.Notify.APILevel\022\"\n\010apiQuota\030\007 \001(\0132\020"
      ".Notify.APIQuota\022$\n\tusedQuota\030\010 \001(\0132\021.No"
      "tify.UsedQuota\"\\\n\010Response\022\025\n\007retType\030\001 "
      "\002(\005:\004-400\022\016\n\006retMsg\030\002 \001(\t\022\017\n\007errCode\030\003 \001"
      "(\005\022\030\n\003s2c\030\004 \001(\0132\013.Notify.S2C*\330\001\n\nNotifyT"
      "ype\022\023\n\017NotifyType_None\020\000\022\027\n\023NotifyType_G"
      "twEvent\020\001\022\034\n\030NotifyType_ProgramStatus\020\002\022"
      "\031\n\025NotifyType_ConnStatus\020\003\022\027\n\023NotifyType"
      "_QotRight\020\004\022\027\n\023NotifyType_APILevel\020\005\022\027\n\023"
      "NotifyType_APIQuota\020\006\022\030\n\024NotifyType_Used"
      "Quota\020\007*\233\004\n\014GtwEventType\022\025\n\021GtwEventType"
      "_None\020\000\022#\n\037GtwEventType_LocalCfgLoadFail"
      "ed\020\001\022 \n\034GtwEventType_APISvrRunFailed\020\002\022\034"
      "\n\030GtwEventType_ForceUpdate\020\003\022\034\n\030GtwEvent"
      "Type_LoginFailed\020\004\022\"\n\036GtwEventType_UnAgr"
      "eeDisclaimer\020\005\022\036\n\032GtwEventType_NetCfgMis"
      "sing\020\006\022\032\n\026GtwEventType_KickedOut\020\007\022 \n\034Gt"
      "wEventType_LoginPwdChanged\020\010\022\031\n\025GtwEvent"
      "Type_BanLogin\020\t\022\"\n\036GtwEventType_NeedPicV"
      "erifyCode\020\n\022$\n GtwEventType_NeedPhoneVer"
      "ifyCode\020\013\022 \n\034GtwEventType_AppDataNotExis"
      "t\020\014\022#\n\037GtwEventType_NessaryDataMissing\020\r"
      "\022 \n\034GtwEventType_TradePwdChanged\020\016\022!\n\035Gt"
      "wEventType_EnableDeviceLock\020\017B=\n\023com.fut"
      "u.openapi.pbZ&github.com/futuopen/ftapi4"
      "go/pb/notify"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2052);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Notify.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Notify_2eproto
namespace Notify {
const ::google::protobuf::EnumDescriptor* NotifyType_descriptor() {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Notify_2eproto::file_level_enum_descriptors[0];
}
bool NotifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GtwEventType_descriptor() {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Notify_2eproto::file_level_enum_descriptors[1];
}
bool GtwEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GtwEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GtwEvent::kEventTypeFieldNumber;
const int GtwEvent::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GtwEvent::GtwEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsGtwEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.GtwEvent)
}
GtwEvent::GtwEvent(const GtwEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  eventtype_ = from.eventtype_;
  // @@protoc_insertion_point(copy_constructor:Notify.GtwEvent)
}

void GtwEvent::SharedCtor() {
  _cached_size_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventtype_ = 0;
}

GtwEvent::~GtwEvent() {
  // @@protoc_insertion_point(destructor:Notify.GtwEvent)
  SharedDtor();
}

void GtwEvent::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GtwEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GtwEvent::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GtwEvent& GtwEvent::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsGtwEvent();
  return *internal_default_instance();
}

GtwEvent* GtwEvent::New(::google::protobuf::Arena* arena) const {
  GtwEvent* n = new GtwEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GtwEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.GtwEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*desc_.UnsafeRawStringPointer())->clear();
  }
  eventtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GtwEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.GtwEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 eventType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eventtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eventtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Notify.GtwEvent.desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.GtwEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.GtwEvent)
  return false;
#undef DO_
}

void GtwEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.GtwEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 eventType = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eventtype(), output);
  }

  // required string desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Notify.GtwEvent.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->desc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.GtwEvent)
}

::google::protobuf::uint8* GtwEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.GtwEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 eventType = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eventtype(), target);
  }

  // required string desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Notify.GtwEvent.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->desc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.GtwEvent)
  return target;
}

size_t GtwEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Notify.GtwEvent)
  size_t total_size = 0;

  if (has_desc()) {
    // required string desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  if (has_eventtype()) {
    // required int32 eventType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventtype());
  }

  return total_size;
}
size_t GtwEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.GtwEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string desc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());

    // required int32 eventType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eventtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GtwEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.GtwEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const GtwEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GtwEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.GtwEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.GtwEvent)
    MergeFrom(*source);
  }
}

void GtwEvent::MergeFrom(const GtwEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.GtwEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      eventtype_ = from.eventtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GtwEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.GtwEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GtwEvent::CopyFrom(const GtwEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.GtwEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GtwEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GtwEvent::Swap(GtwEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GtwEvent::InternalSwap(GtwEvent* other) {
  using std::swap;
  desc_.Swap(&other->desc_);
  swap(eventtype_, other->eventtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GtwEvent::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProgramStatus::InitAsDefaultInstance() {
  ::Notify::_ProgramStatus_default_instance_._instance.get_mutable()->programstatus_ = const_cast< ::Common::ProgramStatus*>(
      ::Common::ProgramStatus::internal_default_instance());
}
void ProgramStatus::clear_programstatus() {
  if (programstatus_ != NULL) programstatus_->Clear();
  clear_has_programstatus();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProgramStatus::kProgramStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProgramStatus::ProgramStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsProgramStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.ProgramStatus)
}
ProgramStatus::ProgramStatus(const ProgramStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_programstatus()) {
    programstatus_ = new ::Common::ProgramStatus(*from.programstatus_);
  } else {
    programstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Notify.ProgramStatus)
}

void ProgramStatus::SharedCtor() {
  _cached_size_ = 0;
  programstatus_ = NULL;
}

ProgramStatus::~ProgramStatus() {
  // @@protoc_insertion_point(destructor:Notify.ProgramStatus)
  SharedDtor();
}

void ProgramStatus::SharedDtor() {
  if (this != internal_default_instance()) delete programstatus_;
}

void ProgramStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgramStatus::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProgramStatus& ProgramStatus::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsProgramStatus();
  return *internal_default_instance();
}

ProgramStatus* ProgramStatus::New(::google::protobuf::Arena* arena) const {
  ProgramStatus* n = new ProgramStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProgramStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.ProgramStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(programstatus_ != NULL);
    programstatus_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProgramStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.ProgramStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Common.ProgramStatus programStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_programstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.ProgramStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.ProgramStatus)
  return false;
#undef DO_
}

void ProgramStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.ProgramStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.ProgramStatus programStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->programstatus_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.ProgramStatus)
}

::google::protobuf::uint8* ProgramStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.ProgramStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Common.ProgramStatus programStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->programstatus_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.ProgramStatus)
  return target;
}

size_t ProgramStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.ProgramStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Common.ProgramStatus programStatus = 1;
  if (has_programstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->programstatus_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgramStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.ProgramStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProgramStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.ProgramStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.ProgramStatus)
    MergeFrom(*source);
  }
}

void ProgramStatus::MergeFrom(const ProgramStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.ProgramStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_programstatus()) {
    mutable_programstatus()->::Common::ProgramStatus::MergeFrom(from.programstatus());
  }
}

void ProgramStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.ProgramStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramStatus::CopyFrom(const ProgramStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.ProgramStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_programstatus()) {
    if (!this->programstatus_->IsInitialized()) return false;
  }
  return true;
}

void ProgramStatus::Swap(ProgramStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProgramStatus::InternalSwap(ProgramStatus* other) {
  using std::swap;
  swap(programstatus_, other->programstatus_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProgramStatus::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectStatus::kQotLoginedFieldNumber;
const int ConnectStatus::kTrdLoginedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectStatus::ConnectStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsConnectStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.ConnectStatus)
}
ConnectStatus::ConnectStatus(const ConnectStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&qotlogined_, &from.qotlogined_,
    static_cast<size_t>(reinterpret_cast<char*>(&trdlogined_) -
    reinterpret_cast<char*>(&qotlogined_)) + sizeof(trdlogined_));
  // @@protoc_insertion_point(copy_constructor:Notify.ConnectStatus)
}

void ConnectStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&qotlogined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trdlogined_) -
      reinterpret_cast<char*>(&qotlogined_)) + sizeof(trdlogined_));
}

ConnectStatus::~ConnectStatus() {
  // @@protoc_insertion_point(destructor:Notify.ConnectStatus)
  SharedDtor();
}

void ConnectStatus::SharedDtor() {
}

void ConnectStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectStatus::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectStatus& ConnectStatus::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsConnectStatus();
  return *internal_default_instance();
}

ConnectStatus* ConnectStatus::New(::google::protobuf::Arena* arena) const {
  ConnectStatus* n = new ConnectStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.ConnectStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&qotlogined_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trdlogined_) -
      reinterpret_cast<char*>(&qotlogined_)) + sizeof(trdlogined_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.ConnectStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool qotLogined = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_qotlogined();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &qotlogined_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool trdLogined = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_trdlogined();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trdlogined_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.ConnectStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.ConnectStatus)
  return false;
#undef DO_
}

void ConnectStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.ConnectStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool qotLogined = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->qotlogined(), output);
  }

  // required bool trdLogined = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->trdlogined(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.ConnectStatus)
}

::google::protobuf::uint8* ConnectStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.ConnectStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool qotLogined = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->qotlogined(), target);
  }

  // required bool trdLogined = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->trdlogined(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.ConnectStatus)
  return target;
}

size_t ConnectStatus::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Notify.ConnectStatus)
  size_t total_size = 0;

  if (has_qotlogined()) {
    // required bool qotLogined = 1;
    total_size += 1 + 1;
  }

  if (has_trdlogined()) {
    // required bool trdLogined = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ConnectStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.ConnectStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool qotLogined = 1;
    total_size += 1 + 1;

    // required bool trdLogined = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.ConnectStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.ConnectStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.ConnectStatus)
    MergeFrom(*source);
  }
}

void ConnectStatus::MergeFrom(const ConnectStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.ConnectStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      qotlogined_ = from.qotlogined_;
    }
    if (cached_has_bits & 0x00000002u) {
      trdlogined_ = from.trdlogined_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConnectStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.ConnectStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectStatus::CopyFrom(const ConnectStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.ConnectStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ConnectStatus::Swap(ConnectStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectStatus::InternalSwap(ConnectStatus* other) {
  using std::swap;
  swap(qotlogined_, other->qotlogined_);
  swap(trdlogined_, other->trdlogined_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectStatus::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QotRight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QotRight::kHkQotRightFieldNumber;
const int QotRight::kUsQotRightFieldNumber;
const int QotRight::kCnQotRightFieldNumber;
const int QotRight::kHkOptionQotRightFieldNumber;
const int QotRight::kHasUSOptionQotRightFieldNumber;
const int QotRight::kHkFutureQotRightFieldNumber;
const int QotRight::kUsFutureQotRightFieldNumber;
const int QotRight::kUsOptionQotRightFieldNumber;
const int QotRight::kUsIndexQotRightFieldNumber;
const int QotRight::kUsOtcQotRightFieldNumber;
const int QotRight::kSgFutureQotRightFieldNumber;
const int QotRight::kJpFutureQotRightFieldNumber;
const int QotRight::kUsCMEFutureQotRightFieldNumber;
const int QotRight::kUsCBOTFutureQotRightFieldNumber;
const int QotRight::kUsNYMEXFutureQotRightFieldNumber;
const int QotRight::kUsCOMEXFutureQotRightFieldNumber;
const int QotRight::kUsCBOEFutureQotRightFieldNumber;
const int QotRight::kShQotRightFieldNumber;
const int QotRight::kSzQotRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QotRight::QotRight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsQotRight();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.QotRight)
}
QotRight::QotRight(const QotRight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hkqotright_, &from.hkqotright_,
    static_cast<size_t>(reinterpret_cast<char*>(&shqotright_) -
    reinterpret_cast<char*>(&hkqotright_)) + sizeof(shqotright_));
  // @@protoc_insertion_point(copy_constructor:Notify.QotRight)
}

void QotRight::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hkqotright_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shqotright_) -
      reinterpret_cast<char*>(&hkqotright_)) + sizeof(shqotright_));
}

QotRight::~QotRight() {
  // @@protoc_insertion_point(destructor:Notify.QotRight)
  SharedDtor();
}

void QotRight::SharedDtor() {
}

void QotRight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QotRight::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QotRight& QotRight::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsQotRight();
  return *internal_default_instance();
}

QotRight* QotRight::New(::google::protobuf::Arena* arena) const {
  QotRight* n = new QotRight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QotRight::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.QotRight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&hkqotright_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usoptionqotright_) -
        reinterpret_cast<char*>(&hkqotright_)) + sizeof(usoptionqotright_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&usindexqotright_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uscomexfutureqotright_) -
        reinterpret_cast<char*>(&usindexqotright_)) + sizeof(uscomexfutureqotright_));
  }
  if (cached_has_bits & 458752u) {
    ::memset(&szqotright_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&shqotright_) -
        reinterpret_cast<char*>(&szqotright_)) + sizeof(shqotright_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QotRight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.QotRight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 hkQotRight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_hkqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hkqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 usQotRight = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_usqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cnQotRight = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_cnqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hkOptionQotRight = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_hkoptionqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hkoptionqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hasUSOptionQotRight = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_hasusoptionqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasusoptionqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hkFutureQotRight = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_hkfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hkfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usFutureQotRight = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_usfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usOptionQotRight = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_usoptionqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usoptionqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usIndexQotRight = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_usindexqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usindexqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usOtcQotRight = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_usotcqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usotcqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 sgFutureQotRight = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_sgfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sgfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 jpFutureQotRight = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_jpfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jpfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usCMEFutureQotRight = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_uscmefutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uscmefutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usCBOTFutureQotRight = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_uscbotfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uscbotfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usNYMEXFutureQotRight = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_usnymexfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usnymexfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usCOMEXFutureQotRight = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_uscomexfutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uscomexfutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usCBOEFutureQotRight = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_uscboefutureqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uscboefutureqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 shQotRight = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_shqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 szQotRight = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_szqotright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &szqotright_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.QotRight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.QotRight)
  return false;
#undef DO_
}

void QotRight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.QotRight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 hkQotRight = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hkqotright(), output);
  }

  // required int32 usQotRight = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->usqotright(), output);
  }

  // required int32 cnQotRight = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cnqotright(), output);
  }

  // optional int32 hkOptionQotRight = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hkoptionqotright(), output);
  }

  // optional bool hasUSOptionQotRight = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->hasusoptionqotright(), output);
  }

  // optional int32 hkFutureQotRight = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->hkfutureqotright(), output);
  }

  // optional int32 usFutureQotRight = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->usfutureqotright(), output);
  }

  // optional int32 usOptionQotRight = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->usoptionqotright(), output);
  }

  // optional int32 usIndexQotRight = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->usindexqotright(), output);
  }

  // optional int32 usOtcQotRight = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->usotcqotright(), output);
  }

  // optional int32 sgFutureQotRight = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->sgfutureqotright(), output);
  }

  // optional int32 jpFutureQotRight = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->jpfutureqotright(), output);
  }

  // optional int32 usCMEFutureQotRight = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->uscmefutureqotright(), output);
  }

  // optional int32 usCBOTFutureQotRight = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->uscbotfutureqotright(), output);
  }

  // optional int32 usNYMEXFutureQotRight = 18;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->usnymexfutureqotright(), output);
  }

  // optional int32 usCOMEXFutureQotRight = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->uscomexfutureqotright(), output);
  }

  // optional int32 usCBOEFutureQotRight = 20;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->uscboefutureqotright(), output);
  }

  // optional int32 shQotRight = 21;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->shqotright(), output);
  }

  // optional int32 szQotRight = 22;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->szqotright(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.QotRight)
}

::google::protobuf::uint8* QotRight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.QotRight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 hkQotRight = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hkqotright(), target);
  }

  // required int32 usQotRight = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->usqotright(), target);
  }

  // required int32 cnQotRight = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cnqotright(), target);
  }

  // optional int32 hkOptionQotRight = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hkoptionqotright(), target);
  }

  // optional bool hasUSOptionQotRight = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->hasusoptionqotright(), target);
  }

  // optional int32 hkFutureQotRight = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->hkfutureqotright(), target);
  }

  // optional int32 usFutureQotRight = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->usfutureqotright(), target);
  }

  // optional int32 usOptionQotRight = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->usoptionqotright(), target);
  }

  // optional int32 usIndexQotRight = 12;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->usindexqotright(), target);
  }

  // optional int32 usOtcQotRight = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->usotcqotright(), target);
  }

  // optional int32 sgFutureQotRight = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->sgfutureqotright(), target);
  }

  // optional int32 jpFutureQotRight = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->jpfutureqotright(), target);
  }

  // optional int32 usCMEFutureQotRight = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->uscmefutureqotright(), target);
  }

  // optional int32 usCBOTFutureQotRight = 17;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->uscbotfutureqotright(), target);
  }

  // optional int32 usNYMEXFutureQotRight = 18;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->usnymexfutureqotright(), target);
  }

  // optional int32 usCOMEXFutureQotRight = 19;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->uscomexfutureqotright(), target);
  }

  // optional int32 usCBOEFutureQotRight = 20;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->uscboefutureqotright(), target);
  }

  // optional int32 shQotRight = 21;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->shqotright(), target);
  }

  // optional int32 szQotRight = 22;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->szqotright(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.QotRight)
  return target;
}

size_t QotRight::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Notify.QotRight)
  size_t total_size = 0;

  if (has_hkqotright()) {
    // required int32 hkQotRight = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hkqotright());
  }

  if (has_usqotright()) {
    // required int32 usQotRight = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usqotright());
  }

  if (has_cnqotright()) {
    // required int32 cnQotRight = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cnqotright());
  }

  return total_size;
}
size_t QotRight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.QotRight)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 hkQotRight = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hkqotright());

    // required int32 usQotRight = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usqotright());

    // required int32 cnQotRight = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cnqotright());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional int32 hkOptionQotRight = 7;
    if (has_hkoptionqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hkoptionqotright());
    }

    // optional bool hasUSOptionQotRight = 8;
    if (has_hasusoptionqotright()) {
      total_size += 1 + 1;
    }

    // optional int32 hkFutureQotRight = 9;
    if (has_hkfutureqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hkfutureqotright());
    }

    // optional int32 usFutureQotRight = 10;
    if (has_usfutureqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usfutureqotright());
    }

    // optional int32 usOptionQotRight = 11;
    if (has_usoptionqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usoptionqotright());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 usIndexQotRight = 12;
    if (has_usindexqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usindexqotright());
    }

    // optional int32 usOtcQotRight = 13;
    if (has_usotcqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usotcqotright());
    }

    // optional int32 sgFutureQotRight = 14;
    if (has_sgfutureqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sgfutureqotright());
    }

    // optional int32 jpFutureQotRight = 15;
    if (has_jpfutureqotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jpfutureqotright());
    }

    // optional int32 usCMEFutureQotRight = 16;
    if (has_uscmefutureqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uscmefutureqotright());
    }

    // optional int32 usCBOTFutureQotRight = 17;
    if (has_uscbotfutureqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uscbotfutureqotright());
    }

    // optional int32 usNYMEXFutureQotRight = 18;
    if (has_usnymexfutureqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usnymexfutureqotright());
    }

    // optional int32 usCOMEXFutureQotRight = 19;
    if (has_uscomexfutureqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uscomexfutureqotright());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional int32 szQotRight = 22;
    if (has_szqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->szqotright());
    }

    // optional int32 usCBOEFutureQotRight = 20;
    if (has_uscboefutureqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uscboefutureqotright());
    }

    // optional int32 shQotRight = 21;
    if (has_shqotright()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shqotright());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QotRight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.QotRight)
  GOOGLE_DCHECK_NE(&from, this);
  const QotRight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QotRight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.QotRight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.QotRight)
    MergeFrom(*source);
  }
}

void QotRight::MergeFrom(const QotRight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.QotRight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      hkqotright_ = from.hkqotright_;
    }
    if (cached_has_bits & 0x00000002u) {
      usqotright_ = from.usqotright_;
    }
    if (cached_has_bits & 0x00000004u) {
      cnqotright_ = from.cnqotright_;
    }
    if (cached_has_bits & 0x00000008u) {
      hkoptionqotright_ = from.hkoptionqotright_;
    }
    if (cached_has_bits & 0x00000010u) {
      hasusoptionqotright_ = from.hasusoptionqotright_;
    }
    if (cached_has_bits & 0x00000020u) {
      hkfutureqotright_ = from.hkfutureqotright_;
    }
    if (cached_has_bits & 0x00000040u) {
      usfutureqotright_ = from.usfutureqotright_;
    }
    if (cached_has_bits & 0x00000080u) {
      usoptionqotright_ = from.usoptionqotright_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      usindexqotright_ = from.usindexqotright_;
    }
    if (cached_has_bits & 0x00000200u) {
      usotcqotright_ = from.usotcqotright_;
    }
    if (cached_has_bits & 0x00000400u) {
      sgfutureqotright_ = from.sgfutureqotright_;
    }
    if (cached_has_bits & 0x00000800u) {
      jpfutureqotright_ = from.jpfutureqotright_;
    }
    if (cached_has_bits & 0x00001000u) {
      uscmefutureqotright_ = from.uscmefutureqotright_;
    }
    if (cached_has_bits & 0x00002000u) {
      uscbotfutureqotright_ = from.uscbotfutureqotright_;
    }
    if (cached_has_bits & 0x00004000u) {
      usnymexfutureqotright_ = from.usnymexfutureqotright_;
    }
    if (cached_has_bits & 0x00008000u) {
      uscomexfutureqotright_ = from.uscomexfutureqotright_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      szqotright_ = from.szqotright_;
    }
    if (cached_has_bits & 0x00020000u) {
      uscboefutureqotright_ = from.uscboefutureqotright_;
    }
    if (cached_has_bits & 0x00040000u) {
      shqotright_ = from.shqotright_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QotRight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.QotRight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QotRight::CopyFrom(const QotRight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.QotRight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QotRight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void QotRight::Swap(QotRight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QotRight::InternalSwap(QotRight* other) {
  using std::swap;
  swap(hkqotright_, other->hkqotright_);
  swap(usqotright_, other->usqotright_);
  swap(cnqotright_, other->cnqotright_);
  swap(hkoptionqotright_, other->hkoptionqotright_);
  swap(hasusoptionqotright_, other->hasusoptionqotright_);
  swap(hkfutureqotright_, other->hkfutureqotright_);
  swap(usfutureqotright_, other->usfutureqotright_);
  swap(usoptionqotright_, other->usoptionqotright_);
  swap(usindexqotright_, other->usindexqotright_);
  swap(usotcqotright_, other->usotcqotright_);
  swap(sgfutureqotright_, other->sgfutureqotright_);
  swap(jpfutureqotright_, other->jpfutureqotright_);
  swap(uscmefutureqotright_, other->uscmefutureqotright_);
  swap(uscbotfutureqotright_, other->uscbotfutureqotright_);
  swap(usnymexfutureqotright_, other->usnymexfutureqotright_);
  swap(uscomexfutureqotright_, other->uscomexfutureqotright_);
  swap(szqotright_, other->szqotright_);
  swap(uscboefutureqotright_, other->uscboefutureqotright_);
  swap(shqotright_, other->shqotright_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QotRight::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void APILevel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APILevel::kApiLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APILevel::APILevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsAPILevel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.APILevel)
}
APILevel::APILevel(const APILevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apilevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apilevel()) {
    apilevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apilevel_);
  }
  // @@protoc_insertion_point(copy_constructor:Notify.APILevel)
}

void APILevel::SharedCtor() {
  _cached_size_ = 0;
  apilevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

APILevel::~APILevel() {
  // @@protoc_insertion_point(destructor:Notify.APILevel)
  SharedDtor();
}

void APILevel::SharedDtor() {
  apilevel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void APILevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APILevel::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APILevel& APILevel::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsAPILevel();
  return *internal_default_instance();
}

APILevel* APILevel::New(::google::protobuf::Arena* arena) const {
  APILevel* n = new APILevel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APILevel::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.APILevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!apilevel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*apilevel_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APILevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.APILevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string apiLevel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apilevel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apilevel().data(), static_cast<int>(this->apilevel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Notify.APILevel.apiLevel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.APILevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.APILevel)
  return false;
#undef DO_
}

void APILevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.APILevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string apiLevel = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apilevel().data(), static_cast<int>(this->apilevel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Notify.APILevel.apiLevel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->apilevel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.APILevel)
}

::google::protobuf::uint8* APILevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.APILevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string apiLevel = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apilevel().data(), static_cast<int>(this->apilevel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Notify.APILevel.apiLevel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->apilevel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.APILevel)
  return target;
}

size_t APILevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.APILevel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string apiLevel = 3;
  if (has_apilevel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apilevel());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APILevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.APILevel)
  GOOGLE_DCHECK_NE(&from, this);
  const APILevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APILevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.APILevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.APILevel)
    MergeFrom(*source);
  }
}

void APILevel::MergeFrom(const APILevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.APILevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_apilevel()) {
    set_has_apilevel();
    apilevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apilevel_);
  }
}

void APILevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.APILevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APILevel::CopyFrom(const APILevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.APILevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APILevel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void APILevel::Swap(APILevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APILevel::InternalSwap(APILevel* other) {
  using std::swap;
  apilevel_.Swap(&other->apilevel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APILevel::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void APIQuota::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APIQuota::kSubQuotaFieldNumber;
const int APIQuota::kHistoryKLQuotaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APIQuota::APIQuota()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsAPIQuota();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.APIQuota)
}
APIQuota::APIQuota(const APIQuota& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&subquota_, &from.subquota_,
    static_cast<size_t>(reinterpret_cast<char*>(&historyklquota_) -
    reinterpret_cast<char*>(&subquota_)) + sizeof(historyklquota_));
  // @@protoc_insertion_point(copy_constructor:Notify.APIQuota)
}

void APIQuota::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&subquota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&historyklquota_) -
      reinterpret_cast<char*>(&subquota_)) + sizeof(historyklquota_));
}

APIQuota::~APIQuota() {
  // @@protoc_insertion_point(destructor:Notify.APIQuota)
  SharedDtor();
}

void APIQuota::SharedDtor() {
}

void APIQuota::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APIQuota::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APIQuota& APIQuota::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsAPIQuota();
  return *internal_default_instance();
}

APIQuota* APIQuota::New(::google::protobuf::Arena* arena) const {
  APIQuota* n = new APIQuota;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APIQuota::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.APIQuota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&subquota_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&historyklquota_) -
        reinterpret_cast<char*>(&subquota_)) + sizeof(historyklquota_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APIQuota::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.APIQuota)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 subQuota = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_subquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 historyKLQuota = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_historyklquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &historyklquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.APIQuota)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.APIQuota)
  return false;
#undef DO_
}

void APIQuota::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.APIQuota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 subQuota = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->subquota(), output);
  }

  // required int32 historyKLQuota = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->historyklquota(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.APIQuota)
}

::google::protobuf::uint8* APIQuota::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.APIQuota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 subQuota = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->subquota(), target);
  }

  // required int32 historyKLQuota = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->historyklquota(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.APIQuota)
  return target;
}

size_t APIQuota::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Notify.APIQuota)
  size_t total_size = 0;

  if (has_subquota()) {
    // required int32 subQuota = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subquota());
  }

  if (has_historyklquota()) {
    // required int32 historyKLQuota = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->historyklquota());
  }

  return total_size;
}
size_t APIQuota::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.APIQuota)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 subQuota = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subquota());

    // required int32 historyKLQuota = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->historyklquota());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APIQuota::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.APIQuota)
  GOOGLE_DCHECK_NE(&from, this);
  const APIQuota* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APIQuota>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.APIQuota)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.APIQuota)
    MergeFrom(*source);
  }
}

void APIQuota::MergeFrom(const APIQuota& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.APIQuota)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      subquota_ = from.subquota_;
    }
    if (cached_has_bits & 0x00000002u) {
      historyklquota_ = from.historyklquota_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APIQuota::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.APIQuota)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APIQuota::CopyFrom(const APIQuota& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.APIQuota)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APIQuota::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void APIQuota::Swap(APIQuota* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APIQuota::InternalSwap(APIQuota* other) {
  using std::swap;
  swap(subquota_, other->subquota_);
  swap(historyklquota_, other->historyklquota_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APIQuota::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsedQuota::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsedQuota::kUsedSubQuotaFieldNumber;
const int UsedQuota::kUsedKLineQuotaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsedQuota::UsedQuota()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsUsedQuota();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.UsedQuota)
}
UsedQuota::UsedQuota(const UsedQuota& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&usedsubquota_, &from.usedsubquota_,
    static_cast<size_t>(reinterpret_cast<char*>(&usedklinequota_) -
    reinterpret_cast<char*>(&usedsubquota_)) + sizeof(usedklinequota_));
  // @@protoc_insertion_point(copy_constructor:Notify.UsedQuota)
}

void UsedQuota::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&usedsubquota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usedklinequota_) -
      reinterpret_cast<char*>(&usedsubquota_)) + sizeof(usedklinequota_));
}

UsedQuota::~UsedQuota() {
  // @@protoc_insertion_point(destructor:Notify.UsedQuota)
  SharedDtor();
}

void UsedQuota::SharedDtor() {
}

void UsedQuota::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UsedQuota::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsedQuota& UsedQuota::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsUsedQuota();
  return *internal_default_instance();
}

UsedQuota* UsedQuota::New(::google::protobuf::Arena* arena) const {
  UsedQuota* n = new UsedQuota;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UsedQuota::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.UsedQuota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&usedsubquota_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usedklinequota_) -
        reinterpret_cast<char*>(&usedsubquota_)) + sizeof(usedklinequota_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UsedQuota::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.UsedQuota)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 usedSubQuota = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_usedsubquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usedsubquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 usedKLineQuota = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_usedklinequota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usedklinequota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.UsedQuota)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.UsedQuota)
  return false;
#undef DO_
}

void UsedQuota::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.UsedQuota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 usedSubQuota = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->usedsubquota(), output);
  }

  // optional int32 usedKLineQuota = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->usedklinequota(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.UsedQuota)
}

::google::protobuf::uint8* UsedQuota::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.UsedQuota)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 usedSubQuota = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->usedsubquota(), target);
  }

  // optional int32 usedKLineQuota = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->usedklinequota(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.UsedQuota)
  return target;
}

size_t UsedQuota::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.UsedQuota)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 usedSubQuota = 1;
    if (has_usedsubquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usedsubquota());
    }

    // optional int32 usedKLineQuota = 2;
    if (has_usedklinequota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usedklinequota());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UsedQuota::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.UsedQuota)
  GOOGLE_DCHECK_NE(&from, this);
  const UsedQuota* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsedQuota>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.UsedQuota)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.UsedQuota)
    MergeFrom(*source);
  }
}

void UsedQuota::MergeFrom(const UsedQuota& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.UsedQuota)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      usedsubquota_ = from.usedsubquota_;
    }
    if (cached_has_bits & 0x00000002u) {
      usedklinequota_ = from.usedklinequota_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UsedQuota::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.UsedQuota)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsedQuota::CopyFrom(const UsedQuota& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.UsedQuota)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsedQuota::IsInitialized() const {
  return true;
}

void UsedQuota::Swap(UsedQuota* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsedQuota::InternalSwap(UsedQuota* other) {
  using std::swap;
  swap(usedsubquota_, other->usedsubquota_);
  swap(usedklinequota_, other->usedklinequota_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UsedQuota::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2C::InitAsDefaultInstance() {
  ::Notify::_S2C_default_instance_._instance.get_mutable()->event_ = const_cast< ::Notify::GtwEvent*>(
      ::Notify::GtwEvent::internal_default_instance());
  ::Notify::_S2C_default_instance_._instance.get_mutable()->programstatus_ = const_cast< ::Notify::ProgramStatus*>(
      ::Notify::ProgramStatus::internal_default_instance());
  ::Notify::_S2C_default_instance_._instance.get_mutable()->connectstatus_ = const_cast< ::Notify::ConnectStatus*>(
      ::Notify::ConnectStatus::internal_default_instance());
  ::Notify::_S2C_default_instance_._instance.get_mutable()->qotright_ = const_cast< ::Notify::QotRight*>(
      ::Notify::QotRight::internal_default_instance());
  ::Notify::_S2C_default_instance_._instance.get_mutable()->apilevel_ = const_cast< ::Notify::APILevel*>(
      ::Notify::APILevel::internal_default_instance());
  ::Notify::_S2C_default_instance_._instance.get_mutable()->apiquota_ = const_cast< ::Notify::APIQuota*>(
      ::Notify::APIQuota::internal_default_instance());
  ::Notify::_S2C_default_instance_._instance.get_mutable()->usedquota_ = const_cast< ::Notify::UsedQuota*>(
      ::Notify::UsedQuota::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C::kTypeFieldNumber;
const int S2C::kEventFieldNumber;
const int S2C::kProgramStatusFieldNumber;
const int S2C::kConnectStatusFieldNumber;
const int S2C::kQotRightFieldNumber;
const int S2C::kApiLevelFieldNumber;
const int S2C::kApiQuotaFieldNumber;
const int S2C::kUsedQuotaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C::S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsS2C();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.S2C)
}
S2C::S2C(const S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::Notify::GtwEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  if (from.has_programstatus()) {
    programstatus_ = new ::Notify::ProgramStatus(*from.programstatus_);
  } else {
    programstatus_ = NULL;
  }
  if (from.has_connectstatus()) {
    connectstatus_ = new ::Notify::ConnectStatus(*from.connectstatus_);
  } else {
    connectstatus_ = NULL;
  }
  if (from.has_qotright()) {
    qotright_ = new ::Notify::QotRight(*from.qotright_);
  } else {
    qotright_ = NULL;
  }
  if (from.has_apilevel()) {
    apilevel_ = new ::Notify::APILevel(*from.apilevel_);
  } else {
    apilevel_ = NULL;
  }
  if (from.has_apiquota()) {
    apiquota_ = new ::Notify::APIQuota(*from.apiquota_);
  } else {
    apiquota_ = NULL;
  }
  if (from.has_usedquota()) {
    usedquota_ = new ::Notify::UsedQuota(*from.usedquota_);
  } else {
    usedquota_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Notify.S2C)
}

void S2C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&event_)) + sizeof(type_));
}

S2C::~S2C() {
  // @@protoc_insertion_point(destructor:Notify.S2C)
  SharedDtor();
}

void S2C::SharedDtor() {
  if (this != internal_default_instance()) delete event_;
  if (this != internal_default_instance()) delete programstatus_;
  if (this != internal_default_instance()) delete connectstatus_;
  if (this != internal_default_instance()) delete qotright_;
  if (this != internal_default_instance()) delete apilevel_;
  if (this != internal_default_instance()) delete apiquota_;
  if (this != internal_default_instance()) delete usedquota_;
}

void S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C& S2C::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsS2C();
  return *internal_default_instance();
}

S2C* S2C::New(::google::protobuf::Arena* arena) const {
  S2C* n = new S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(event_ != NULL);
      event_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(programstatus_ != NULL);
      programstatus_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(connectstatus_ != NULL);
      connectstatus_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(qotright_ != NULL);
      qotright_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(apilevel_ != NULL);
      apilevel_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(apiquota_ != NULL);
      apiquota_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(usedquota_ != NULL);
      usedquota_->Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.GtwEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.ProgramStatus programStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_programstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.ConnectStatus connectStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connectstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.QotRight qotRight = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_qotright()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.APILevel apiLevel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apilevel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.APIQuota apiQuota = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_apiquota()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.UsedQuota usedQuota = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_usedquota()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.S2C)
  return false;
#undef DO_
}

void S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .Notify.GtwEvent event = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->event_, output);
  }

  // optional .Notify.ProgramStatus programStatus = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->programstatus_, output);
  }

  // optional .Notify.ConnectStatus connectStatus = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->connectstatus_, output);
  }

  // optional .Notify.QotRight qotRight = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->qotright_, output);
  }

  // optional .Notify.APILevel apiLevel = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->apilevel_, output);
  }

  // optional .Notify.APIQuota apiQuota = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->apiquota_, output);
  }

  // optional .Notify.UsedQuota usedQuota = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->usedquota_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.S2C)
}

::google::protobuf::uint8* S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .Notify.GtwEvent event = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->event_, deterministic, target);
  }

  // optional .Notify.ProgramStatus programStatus = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->programstatus_, deterministic, target);
  }

  // optional .Notify.ConnectStatus connectStatus = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->connectstatus_, deterministic, target);
  }

  // optional .Notify.QotRight qotRight = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->qotright_, deterministic, target);
  }

  // optional .Notify.APILevel apiLevel = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->apilevel_, deterministic, target);
  }

  // optional .Notify.APIQuota apiQuota = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->apiquota_, deterministic, target);
  }

  // optional .Notify.UsedQuota usedQuota = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->usedquota_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.S2C)
  return target;
}

size_t S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.S2C)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .Notify.GtwEvent event = 2;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->event_);
    }

    // optional .Notify.ProgramStatus programStatus = 3;
    if (has_programstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->programstatus_);
    }

    // optional .Notify.ConnectStatus connectStatus = 4;
    if (has_connectstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->connectstatus_);
    }

    // optional .Notify.QotRight qotRight = 5;
    if (has_qotright()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->qotright_);
    }

    // optional .Notify.APILevel apiLevel = 6;
    if (has_apilevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->apilevel_);
    }

    // optional .Notify.APIQuota apiQuota = 7;
    if (has_apiquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->apiquota_);
    }

    // optional .Notify.UsedQuota usedQuota = 8;
    if (has_usedquota()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->usedquota_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.S2C)
    MergeFrom(*source);
  }
}

void S2C::MergeFrom(const S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_event()->::Notify::GtwEvent::MergeFrom(from.event());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_programstatus()->::Notify::ProgramStatus::MergeFrom(from.programstatus());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_connectstatus()->::Notify::ConnectStatus::MergeFrom(from.connectstatus());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_qotright()->::Notify::QotRight::MergeFrom(from.qotright());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_apilevel()->::Notify::APILevel::MergeFrom(from.apilevel());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_apiquota()->::Notify::APIQuota::MergeFrom(from.apiquota());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_usedquota()->::Notify::UsedQuota::MergeFrom(from.usedquota());
    }
    if (cached_has_bits & 0x00000080u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C::CopyFrom(const S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  if (has_event()) {
    if (!this->event_->IsInitialized()) return false;
  }
  if (has_programstatus()) {
    if (!this->programstatus_->IsInitialized()) return false;
  }
  if (has_connectstatus()) {
    if (!this->connectstatus_->IsInitialized()) return false;
  }
  if (has_qotright()) {
    if (!this->qotright_->IsInitialized()) return false;
  }
  if (has_apilevel()) {
    if (!this->apilevel_->IsInitialized()) return false;
  }
  if (has_apiquota()) {
    if (!this->apiquota_->IsInitialized()) return false;
  }
  return true;
}

void S2C::Swap(S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C::InternalSwap(S2C* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(programstatus_, other->programstatus_);
  swap(connectstatus_, other->connectstatus_);
  swap(qotright_, other->qotright_);
  swap(apilevel_, other->apilevel_);
  swap(apiquota_, other->apiquota_);
  swap(usedquota_, other->usedquota_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::Notify::_Response_default_instance_._instance.get_mutable()->s2c_ = const_cast< ::Notify::S2C*>(
      ::Notify::S2C::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kRetTypeFieldNumber;
const int Response::kRetMsgFieldNumber;
const int Response::kErrCodeFieldNumber;
const int Response::kS2CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Notify_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Notify.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_s2c()) {
    s2c_ = new ::Notify::S2C(*from.s2c_);
  } else {
    s2c_ = NULL;
  }
  ::memcpy(&errcode_, &from.errcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&rettype_) -
    reinterpret_cast<char*>(&errcode_)) + sizeof(rettype_));
  // @@protoc_insertion_point(copy_constructor:Notify.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&s2c_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&s2c_)) + sizeof(errcode_));
  rettype_ = -400;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Notify.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete s2c_;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_Notify_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Notify.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(s2c_ != NULL);
      s2c_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    errcode_ = 0;
    rettype_ = -400;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Notify.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retType = 1 [default = -400];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rettype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rettype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string retMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), static_cast<int>(this->retmsg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Notify.Response.retMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 errCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Notify.S2C s2c = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_s2c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Notify.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Notify.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Notify.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retType = 1 [default = -400];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rettype(), output);
  }

  // optional string retMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Notify.Response.retMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retmsg(), output);
  }

  // optional int32 errCode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->errcode(), output);
  }

  // optional .Notify.S2C s2c = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->s2c_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Notify.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Notify.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retType = 1 [default = -400];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rettype(), target);
  }

  // optional string retMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Notify.Response.retMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retmsg(), target);
  }

  // optional int32 errCode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->errcode(), target);
  }

  // optional .Notify.S2C s2c = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->s2c_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Notify.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Notify.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 retType = 1 [default = -400];
  if (has_rettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rettype());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string retMsg = 2;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

    // optional .Notify.S2C s2c = 4;
    if (has_s2c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->s2c_);
    }

    // optional int32 errCode = 3;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Notify.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Notify.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Notify.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Notify.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_s2c()->::Notify::S2C::MergeFrom(from.s2c());
    }
    if (cached_has_bits & 0x00000004u) {
      errcode_ = from.errcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      rettype_ = from.rettype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Notify.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Notify.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_s2c()) {
    if (!this->s2c_->IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  retmsg_.Swap(&other->retmsg_);
  swap(s2c_, other->s2c_);
  swap(errcode_, other->errcode_);
  swap(rettype_, other->rettype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Notify_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Notify_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Notify

// @@protoc_insertion_point(global_scope)
